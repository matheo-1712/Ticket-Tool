@model TicketTool.Models.Ticket

@{
ViewData["Title"] = "Modification d'un ticket";
}

<h1>@ViewData["Title"]</h1>

<div class="container mt-5">
    <form id="ticketForm" action="/api/ticket/update/@Model.Id" method="post">
        <div class="mb-3">
            <label for="username" class="form-label">Nom de l'utilisateur</label>
            <input type="text" class="form-control" id="username" name="Username" value="@Model.Username" required>
        </div>

        <div class="mb-3">
            <label for="title" class="form-label">Titre du ticket</label>
            <input type="text" class="form-control" id="title" name="Title" value="@Model.Title" required>
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea class="form-control" id="description" name="Description" rows="4"
                      required>@Model.Description</textarea>
        </div>

        <select class="form-select" id="statut" name="Statut" required>
            <option value="Non traité" selected>Non traité</option>
            <option value="En cours">En cours</option>
            <option value="Résolu">Résolu</option>
        </select>

        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="Email" value="@Model.Email" required>
        </div>

        <!-- Bouton de confirmation de modification -->
        <button type="submit" class="btn btn-primary">Modifier le ticket</button>

        <!-- Bouton de suppression -->
        <button type="button" class="btn btn-danger" id="deleteButton">Suppression du ticket</button>

    </form>

    <div id="successMessage" style="display:none; margin-top:20px;">
        <div class="alert alert-success">
            Ticket modifié avec succès !
        </div>
    </div>
</div>

<script>
    document.getElementById('ticketForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        let formData = new FormData(this);
        let response = await fetch(this.action, {
            method: this.method,
            body: formData
        });

        let result = await response.json();

        if (response.ok) {
            let successMessage = document.getElementById('successMessage');
            successMessage.style.display = 'block';

            setTimeout(function () {
                window.location.href = '/ticket';
            }, 1000);
        } else {
            alert("Erreur: " + result.message);
        }
    });

    // Gestion de la suppression du ticket
    document.getElementById('deleteButton').addEventListener('click', async function () {
        if (confirm("Êtes-vous sûr de vouloir supprimer ce ticket ?")) {
            let response = await fetch('/api/ticket/delete/@Model.Id', {
                method: 'DELETE'
            });

            if (response.ok) {
                alert("Ticket supprimé avec succès !");
                window.location.href = '/ticket'; // Rediriger après la suppression
            } else {
                alert("Erreur lors de la suppression du ticket");
            }
        }
    });
</script>
